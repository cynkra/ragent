---
title: "Agentic Models with Local LLMs"
subtitle: "A Simple Example in R"
format:
  revealjs:
    theme: simple
    transition: slide
    slide-number: true
    code-copy: true
---

## What is an Agentic Model? {.center}

An AI assistant that can:

- Process user requests
- Use specialized tools
- Combine information
- Provide natural language responses

```{r}
#| echo: true
#| eval: false
agent <- create_agent(
  tools = list(calculator = calc_tool),
  system_prompt = "You are a helpful assistant..."
)
```

## How It Works {.smaller}

:::: {.columns}
::: {.column width="40%"}
1. User asks a question
2. Agent analyzes request
3. Agent uses appropriate tool(s)
4. Tool returns result
5. LLM formulates response
:::

::: {.column width="60%"}
```{mermaid}
flowchart TD
  A[User: What is 15% of 850?] --> B[Agent analyzes]
  B --> C[Calculator tool]
  C --> D[Result: 127.5]
  D --> E[LLM formats response]
  E --> F["15% of 850 equals 127.50 CHF..."]
```
:::
::::

## Advanced Example: Knowledge Base {.smaller}

:::: {.columns}
::: {.column width="40%"}
```{r}
#| echo: true
#| eval: false
# Multiple tools
agent <- create_agent(
  tools = list(
    kb = kb_tool,          # Search docs
    calculator = calc_tool  # Do math
  )
)
```
:::

::: {.column width="60%"}
```{mermaid}
flowchart TD
  A[User: Team lunch for 5?] --> B[Search knowledge base]
  B --> C[Find policy: 30 CHF/person]
  C --> D[Calculate: 5 * 30]
  D --> E[Format response]
  E --> F["Total budget: 150 CHF"]
```
:::
::::

## Key Benefits {.center}

::: {.incremental}
- Local LLMs (privacy, speed)
- Extensible tool system
- Natural language interface
- Combines multiple sources
- Real-world applications
:::